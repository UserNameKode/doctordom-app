import * as Location from 'expo-location';
import { LocationAccuracyInfo, getAccuracyInfo } from './locationUtils';

/**
 * –ë—ã—Å—Ç—Ä—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
 */

interface CachedLocation {
  location: Location.LocationObject;
  timestamp: number;
  accuracy: number;
}

// –ö—ç—à –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
let lastKnownLocation: CachedLocation | null = null;

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –∫—ç—à–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö (5 –º–∏–Ω—É—Ç)
const CACHE_MAX_AGE = 5 * 60 * 1000;

/**
 * –£—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏
 */
export class FastLocationService {
  private static instance: FastLocationService;
  private isLocating = false;

  static getInstance(): FastLocationService {
    if (!FastLocationService.instance) {
      FastLocationService.instance = new FastLocationService();
    }
    return FastLocationService.instance;
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  async getFastLocation(strategy: 'instant' | 'balanced' | 'accurate' = 'balanced'): Promise<{
    location: Location.LocationObject;
    accuracyInfo: LocationAccuracyInfo;
    source: 'cache' | 'fast' | 'accurate';
  }> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    const cachedResult = this.getCachedLocation();
    if (cachedResult && strategy === 'instant') {
      console.log('‚ö° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ');
      return {
        location: cachedResult.location,
        accuracyInfo: getAccuracyInfo(cachedResult.accuracy),
        source: 'cache'
      };
    }

    // –ï—Å–ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏, –∂–¥–µ–º –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if (this.isLocating) {
      console.log('‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏...');
      await this.waitForCurrentLocation();
    }

    this.isLocating = true;

    try {
      switch (strategy) {
        case 'instant':
          return await this.getInstantLocation();
        case 'balanced':
          return await this.getBalancedLocation();
        case 'accurate':
          return await this.getAccurateLocation();
        default:
          return await this.getBalancedLocation();
      }
    } finally {
      this.isLocating = false;
    }
  }

  /**
   * –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–∫—ç—à + –±—ã—Å—Ç—Ä—ã–π GPS)
   */
  private async getInstantLocation() {
    const cachedResult = this.getCachedLocation();
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–≤–µ–∂–∏–π –∫—ç—à, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (cachedResult && this.isCacheFresh(cachedResult, 60000)) { // 1 –º–∏–Ω—É—Ç–∞
      console.log('‚ö° –ö—ç—à —Å–≤–µ–∂–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ');
      return {
        location: cachedResult.location,
        accuracyInfo: getAccuracyInfo(cachedResult.accuracy),
        source: 'cache' as const
      };
    }

    // –ò–Ω–∞—á–µ –±—ã—Å—Ç—Ä—ã–π GPS –∑–∞–ø—Ä–æ—Å
    console.log('üîÑ –ë—ã—Å—Ç—Ä—ã–π GPS –∑–∞–ø—Ä–æ—Å...');
    try {
      const location = await this.requestLocationWithTimeout(
        { accuracy: Location.Accuracy.Low },
        3000 // 3 —Å–µ–∫—É–Ω–¥—ã —Ç–∞–π–º–∞—É—Ç
      );
      
      this.cacheLocation(location);
      return {
        location,
        accuracyInfo: getAccuracyInfo(location.coords.accuracy || undefined),
        source: 'fast' as const
      };
    } catch (error) {
      // –ï—Å–ª–∏ –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à –µ—Å–ª–∏ –µ—Å—Ç—å
      if (cachedResult) {
        console.log('‚ö†Ô∏è –ë—ã—Å—Ç—Ä—ã–π GPS –Ω–µ —É–¥–∞–ª—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à');
        return {
          location: cachedResult.location,
          accuracyInfo: getAccuracyInfo(cachedResult.accuracy),
          source: 'cache' as const
        };
      }
      throw error;
    }
  }

  /**
   * –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–±—ã—Å—Ç—Ä–æ + —Ç–æ—á–Ω–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ)
   */
  private async getBalancedLocation() {
    console.log('üîÑ –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–≤–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const promises = [
      // –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—Ä–æ—Å (3 —Å–µ–∫ —Ç–∞–π–º–∞—É—Ç)
      this.requestLocationWithTimeout(
        { accuracy: Location.Accuracy.Balanced },
        3000
      ).then(location => ({ location, type: 'fast' as const })),
      
      // –¢–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å (8 —Å–µ–∫ —Ç–∞–π–º–∞—É—Ç)
      this.requestLocationWithTimeout(
        { accuracy: Location.Accuracy.High },
        8000
      ).then(location => ({ location, type: 'accurate' as const }))
    ];

    try {
      // –ñ–¥–µ–º –ø–µ—Ä–≤—ã–π —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const firstResult = await Promise.race(promises);
      
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω ${firstResult.type} —Ä–µ–∑—É–ª—å—Ç–∞—Ç`);
      this.cacheLocation(firstResult.location);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –µ—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      if (firstResult.type === 'fast') {
        this.improveAccuracyInBackground(promises);
      }
      
      return {
        location: firstResult.location,
        accuracyInfo: getAccuracyInfo(firstResult.location.coords.accuracy || undefined),
        source: firstResult.type === 'fast' ? 'fast' as const : 'accurate' as const
      };
    } catch (error) {
      // –ï—Å–ª–∏ –æ–±–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ —É–¥–∞–ª–∏—Å—å, –ø—Ä–æ–±—É–µ–º –∫—ç—à
      const cachedResult = this.getCachedLocation();
      if (cachedResult) {
        console.log('‚ö†Ô∏è GPS –Ω–µ —É–¥–∞–ª—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à');
        return {
          location: cachedResult.location,
          accuracyInfo: getAccuracyInfo(cachedResult.accuracy),
          source: 'cache' as const
        };
      }
      throw error;
    }
  }

  /**
   * –¢–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å)
   */
  private async getAccurateLocation() {
    console.log('üéØ –ó–∞–ø—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏...');
    
    try {
      const location = await this.requestLocationWithTimeout(
        { accuracy: Location.Accuracy.BestForNavigation },
        15000 // 15 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
      );
      
      this.cacheLocation(location);
      return {
        location,
        accuracyInfo: getAccuracyInfo(location.coords.accuracy || undefined),
        source: 'accurate' as const
      };
    } catch (error) {
      // Fallback –∫ –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É
      console.log('‚ö†Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º –≤—ã—Å–æ–∫—É—é...');
      const location = await this.requestLocationWithTimeout(
        { accuracy: Location.Accuracy.High },
        8000
      );
      
      this.cacheLocation(location);
      return {
        location,
        accuracyInfo: getAccuracyInfo(location.coords.accuracy || undefined),
        source: 'accurate' as const
      };
    }
  }

  /**
   * GPS –∑–∞–ø—Ä–æ—Å —Å —Ç–∞–π–º–∞—É—Ç–æ–º
   */
  private async requestLocationWithTimeout(
    options: Location.LocationOptions,
    timeoutMs: number
  ): Promise<Location.LocationObject> {
    return new Promise((resolve, reject) => {
      const timer = setTimeout(() => {
        reject(new Error(`Location request timed out after ${timeoutMs}ms`));
      }, timeoutMs);

      Location.getCurrentPositionAsync(options)
        .then(location => {
          clearTimeout(timer);
          resolve(location);
        })
        .catch(error => {
          clearTimeout(timer);
          reject(error);
        });
    });
  }

  /**
   * –£–ª—É—á—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
   */
  private async improveAccuracyInBackground(promises: Promise<any>[]) {
    try {
      // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      const results = await Promise.allSettled(promises);
      
      // –ò—â–µ–º –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      for (const result of results) {
        if (result.status === 'fulfilled' && result.value.type === 'accurate') {
          const improvedLocation = result.value.location;
          const currentCached = this.getCachedLocation();
          
          // –ï—Å–ª–∏ –Ω–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Ç–æ—á–Ω–µ–µ, –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
          if (currentCached && improvedLocation.coords.accuracy) {
            const improvement = currentCached.accuracy / improvedLocation.coords.accuracy;
            if (improvement > 1.5) { // –£–ª—É—á—à–µ–Ω–∏–µ –±–æ–ª–µ–µ —á–µ–º –≤ 1.5 —Ä–∞–∑–∞
              console.log('üéØ –§–æ–Ω–æ–≤–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏:', improvedLocation.coords.accuracy);
              this.cacheLocation(improvedLocation);
            }
          }
          break;
        }
      }
    } catch (error) {
      console.log('‚ö†Ô∏è –§–æ–Ω–æ–≤–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å');
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  private getCachedLocation(): CachedLocation | null {
    if (!lastKnownLocation) return null;
    
    const age = Date.now() - lastKnownLocation.timestamp;
    if (age > CACHE_MAX_AGE) {
      console.log('üóëÔ∏è –ö—ç—à —É—Å—Ç–∞—Ä–µ–ª, –æ—á–∏—â–∞–µ–º');
      lastKnownLocation = null;
      return null;
    }
    
    return lastKnownLocation;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–µ–∂–µ—Å—Ç–∏ –∫—ç—à–∞
   */
  private isCacheFresh(cached: CachedLocation, maxAge: number): boolean {
    return (Date.now() - cached.timestamp) <= maxAge;
  }

  /**
   * –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  private cacheLocation(location: Location.LocationObject) {
    lastKnownLocation = {
      location,
      timestamp: Date.now(),
      accuracy: location.coords.accuracy || Infinity
    };
    console.log('üíæ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ');
  }

  /**
   * –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
   */
  private async waitForCurrentLocation(): Promise<void> {
    return new Promise((resolve) => {
      const checkInterval = setInterval(() => {
        if (!this.isLocating) {
          clearInterval(checkInterval);
          resolve();
        }
      }, 100);
    });
  }

  /**
   * –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  async preloadLocation(): Promise<void> {
    if (this.isLocating) return;
    
    try {
      console.log('üîÑ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...');
      await this.getFastLocation('instant');
    } catch (error) {
      console.log('‚ö†Ô∏è –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å');
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
   */
  clearCache(): void {
    lastKnownLocation = null;
    console.log('üóëÔ∏è –ö—ç—à –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ—á–∏—â–µ–Ω');
  }
}

/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±—ã—Å—Ç—Ä–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
 */
export const getFastLocation = async (
  strategy: 'instant' | 'balanced' | 'accurate' = 'balanced'
) => {
  const service = FastLocationService.getInstance();
  return await service.getFastLocation(strategy);
};

/**
 * –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ (–¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UX)
 */
export const preloadLocation = async () => {
  const service = FastLocationService.getInstance();
  return await service.preloadLocation();
}; 