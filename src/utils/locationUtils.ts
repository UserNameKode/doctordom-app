import * as Location from 'expo-location';

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π
 */

export interface LocationAccuracyInfo {
  accuracy: number;
  level: 'excellent' | 'good' | 'fair' | 'poor';
  description: string;
  color: string;
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Ç–æ—á–Ω–æ—Å—Ç–∏ GPS
 */
export const getAccuracyInfo = (accuracy?: number): LocationAccuracyInfo => {
  if (!accuracy) {
    return {
      accuracy: 0,
      level: 'poor',
      description: '–¢–æ—á–Ω–æ—Å—Ç—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞',
      color: '#FF6B6B'
    };
  }

  if (accuracy <= 5) {
    return {
      accuracy,
      level: 'excellent',
      description: '–û—Ç–ª–∏—á–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å',
      color: '#51CF66'
    };
  }

  if (accuracy <= 20) {
    return {
      accuracy,
      level: 'good', 
      description: '–•–æ—Ä–æ—à–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å',
      color: '#69DB7C'
    };
  }

  if (accuracy <= 100) {
    return {
      accuracy,
      level: 'fair',
      description: '–°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å',
      color: '#FFD43B'
    };
  }

  return {
    accuracy,
    level: 'poor',
    description: '–ù–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å',
    color: '#FF8787'
  };
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏ (–ø–æ —É—Ä–æ–≤–Ω—é —Ç–æ—á–Ω–æ—Å—Ç–∏)
 */
export const isLikelyIndoors = (accuracy?: number): boolean => {
  return !accuracy || accuracy > 200;
};

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
 */
export const LocationConfigs = {
  // –ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è UI
  quick: {
    accuracy: Location.Accuracy.Balanced,
    enableHighAccuracy: false,
  },
  
  // –î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  precise: {
    accuracy: Location.Accuracy.Highest,
    enableHighAccuracy: true,
  },
  
  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  ultraprecise: {
    accuracy: Location.Accuracy.BestForNavigation,
    enableHighAccuracy: true,
  }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º —É–ª—É—á—à–µ–Ω–∏–µ–º —Ç–æ—á–Ω–æ—Å—Ç–∏
 */
export const getLocationWithProgressiveAccuracy = async (): Promise<{
  location: Location.LocationObject;
  accuracyInfo: LocationAccuracyInfo;
}> => {
  let bestLocation: Location.LocationObject | null = null;
  let bestAccuracy = Infinity;

  // –≠—Ç–∞–ø 1: –ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
  try {
    console.log('üîÑ –ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...');
    const quickLocation = await Location.getCurrentPositionAsync(LocationConfigs.quick);
    bestLocation = quickLocation;
    bestAccuracy = quickLocation.coords.accuracy || Infinity;
    console.log(`üìä –ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: ${bestAccuracy.toFixed(0)}–º`);
  } catch (error) {
    console.log('‚ö†Ô∏è –ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å');
  }

  // –≠—Ç–∞–ø 2: –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å
  try {
    console.log('üîÑ –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å...');
    const preciseLocation = await Location.getCurrentPositionAsync(LocationConfigs.precise);
    const newAccuracy = preciseLocation.coords.accuracy || Infinity;
    
    if (newAccuracy < bestAccuracy * 0.7) {
      bestLocation = preciseLocation;
      bestAccuracy = newAccuracy;
      console.log(`‚úÖ –£–ª—É—á—à–µ–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å: ${bestAccuracy.toFixed(0)}–º`);
    }
  } catch (error) {
    console.log('‚ö†Ô∏è –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
  }

  // –≠—Ç–∞–ø 3: –°–≤–µ—Ä—Ö–≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
  if (bestAccuracy > 50) {
    try {
      console.log('üîÑ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å...');
      const ultraLocation = await Location.getCurrentPositionAsync(LocationConfigs.ultraprecise);
      const ultraAccuracy = ultraLocation.coords.accuracy || Infinity;
      
      if (ultraAccuracy < bestAccuracy) {
        bestLocation = ultraLocation;
        bestAccuracy = ultraAccuracy;
        console.log(`üéØ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: ${bestAccuracy.toFixed(0)}–º`);
      }
    } catch (error) {
      console.log('‚ö†Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }
  }

  if (!bestLocation) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã');
  }

  const accuracyInfo = getAccuracyInfo(bestAccuracy);
  
  return {
    location: bestLocation,
    accuracyInfo
  };
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
 */
export const isValidLocation = (latitude: number, longitude: number): boolean => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã
  if (latitude < -90 || latitude > 90 || longitude < -180 || longitude > 180) {
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ –Ω—É–ª–µ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (—á–∞—Å—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –æ—à–∏–±–∫—É)
  if (latitude === 0 && longitude === 0) {
    return false;
  }
  
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω—É
  return true;
};

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏ –≤ –º–µ—Ç—Ä–∞—Ö
 */
export const calculateDistance = (
  lat1: number, 
  lon1: number, 
  lat2: number, 
  lon2: number
): number => {
  const R = 6371000; // –†–∞–¥–∏—É—Å –ó–µ–º–ª–∏ –≤ –º–µ—Ç—Ä–∞—Ö
  const œÜ1 = lat1 * Math.PI/180;
  const œÜ2 = lat2 * Math.PI/180;
  const ŒîœÜ = (lat2-lat1) * Math.PI/180;
  const ŒîŒª = (lon2-lon1) * Math.PI/180;

  const a = Math.sin(ŒîœÜ/2) * Math.sin(ŒîœÜ/2) +
          Math.cos(œÜ1) * Math.cos(œÜ2) *
          Math.sin(ŒîŒª/2) * Math.sin(ŒîŒª/2);
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));

  return R * c;
};

/**
 * –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —É—Å–ª–æ–≤–∏–π
 */
export const getOptimalLocationConfig = (
  scenario: 'address' | 'navigation' | 'delivery' | 'emergency'
) => {
  switch (scenario) {
    case 'address':
      return LocationConfigs.precise;
    case 'navigation':
      return LocationConfigs.ultraprecise;
    case 'delivery':
      return LocationConfigs.precise;
    case 'emergency':
      return LocationConfigs.ultraprecise;
    default:
      return LocationConfigs.quick;
  }
}; 