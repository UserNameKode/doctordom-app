import * as Location from 'expo-location';
import { Platform } from 'react-native';
import { LocationAccuracyInfo, getAccuracyInfo } from './locationUtils';

/**
 * –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö Apple, Google –∏ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö
 * 
 * –ü—Ä–∏–Ω—Ü–∏–ø—ã –∏–∑ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏:
 * 1. –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (iOS Core Location, Android FusedLocationProvider)
 * 2. –≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Å –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ç–æ—á–Ω–æ—Å—Ç–∏
 * 3. –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
 * 4. –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–∑–∞–≤–∏—Å–∏–º–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å
 * 5. –ì–∏–±—Ä–∏–¥–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã (GPS + WiFi + Cellular)
 */

interface QualityLocationResult {
  location: Location.LocationObject;
  accuracyInfo: LocationAccuracyInfo;
  strategy: 'quick' | 'balanced' | 'precise' | 'cached';
  timeSpent: number;
  energyProfile: 'low' | 'medium' | 'high';
  method: 'gps' | 'hybrid' | 'cached';
}

interface LocationStrategy {
  accuracy: Location.Accuracy;
  timeout: number;
  name: string;
  description: string;
  energyProfile: 'low' | 'medium' | 'high';
  expectedAccuracy: number; // –≤ –º–µ—Ç—Ä–∞—Ö
}

/**
 * –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö Samsung Galaxy —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ Apple Core Location guidelines
 */
const ADAPTIVE_STRATEGIES: LocationStrategy[] = [
  {
    accuracy: Location.Accuracy.Low, // ~100–º, –±–∞—Ç–∞—Ä–µ–µ—á–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ
    timeout: 5000,
    name: 'quick',
    description: '–ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (WiFi/Cell)',
    energyProfile: 'low',
    expectedAccuracy: 100
  },
  {
    accuracy: Location.Accuracy.Balanced, // ~10-20–º, —É–º–µ—Ä–µ–Ω–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ
    timeout: 10000,
    name: 'balanced',
    description: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ (GPS + —Å–µ—Ç–∏)',
    energyProfile: 'medium',
    expectedAccuracy: 15
  },
  {
    accuracy: Location.Accuracy.High, // ~3-5–º, –≤—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ
    timeout: 20000,
    name: 'precise',
    description: '–¢–æ—á–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (GPS)',
    energyProfile: 'high',
    expectedAccuracy: 5
  }
];

interface LocationCache {
  location: Location.LocationObject;
  accuracyInfo: LocationAccuracyInfo;
  timestamp: number;
  source: 'gps' | 'network' | 'passive';
}

export class QualityLocationService {
  private static instance: QualityLocationService;
  private isLocating = false;
  private abortController: AbortController | null = null;
  private locationCache: LocationCache | null = null;
  private readonly CACHE_DURATION = 2 * 60 * 1000; // 2 –º–∏–Ω—É—Ç—ã –∫—ç—à
  private readonly STALE_CACHE_DURATION = 10 * 60 * 1000; // 10 –º–∏–Ω—É—Ç –¥–ª—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö

  static getInstance(): QualityLocationService {
    if (!QualityLocationService.instance) {
      QualityLocationService.instance = new QualityLocationService();
    }
    return QualityLocationService.instance;
  }

  /**
   * –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
   */
  async getSmartLocation(
    requiredAccuracy: number = 50, // —Ç—Ä–µ–±—É–µ–º–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –≤ –º–µ—Ç—Ä–∞—Ö
    maxTime: number = 30000, // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
    energyPreference: 'efficiency' | 'accuracy' | 'balanced' = 'balanced'
  ): Promise<QualityLocationResult> {
    console.log(`üß† –£–º–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (—Ç–æ—á–Ω–æ—Å—Ç—å: ${requiredAccuracy}–º, —ç–Ω–µ—Ä–≥–∏—è: ${energyPreference})`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    const cachedLocation = this.getCachedLocation(requiredAccuracy);
    if (cachedLocation) {
      console.log('‚ö° –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ');
      return cachedLocation;
    }

    // –í—ã–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
    const strategy = this.selectOptimalStrategy(requiredAccuracy, energyPreference);
    console.log(`üìã –í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: ${strategy.description}`);

    return this.executeLocationStrategy(strategy, requiredAccuracy, maxTime);
  }

  /**
   * –í—ã–±–æ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
   */
  private selectOptimalStrategy(
    requiredAccuracy: number,
    energyPreference: 'efficiency' | 'accuracy' | 'balanced'
  ): LocationStrategy {
    const strategies = [...ADAPTIVE_STRATEGIES];

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ —Ç—Ä–µ–±—É–µ–º–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏
    const suitableStrategies = strategies.filter(s => s.expectedAccuracy <= requiredAccuracy * 2);

    if (suitableStrategies.length === 0) {
      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—É—é —Ç–æ—á–Ω—É—é
      return strategies[strategies.length - 1];
    }

    // –í—ã–±–∏—Ä–∞–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
    switch (energyPreference) {
      case 'efficiency':
        // –í—ã–±–∏—Ä–∞–µ–º —Å–∞–º—É—é —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é –∏–∑ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö
        return suitableStrategies.find(s => s.energyProfile === 'low') || suitableStrategies[0];
      
      case 'accuracy':
        // –í—ã–±–∏—Ä–∞–µ–º —Å–∞–º—É—é —Ç–æ—á–Ω—É—é –∏–∑ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö
        return suitableStrategies[suitableStrategies.length - 1];
      
      case 'balanced':
      default:
        // –í—ã–±–∏—Ä–∞–µ–º —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        return suitableStrategies.find(s => s.energyProfile === 'medium') ||
               suitableStrategies[Math.floor(suitableStrategies.length / 2)];
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  private async executeLocationStrategy(
    strategy: LocationStrategy,
    requiredAccuracy: number,
    maxTime: number
  ): Promise<QualityLocationResult> {
    if (this.isLocating) {
      throw new Error('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
    }

    this.isLocating = true;
    this.abortController = new AbortController();
    const startTime = Date.now();

    try {
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
      const timeoutForStrategy = Math.min(strategy.timeout, maxTime);
      
      console.log(`‚è±Ô∏è –í—ã–ø–æ–ª–Ω—è–µ–º ${strategy.description} (${timeoutForStrategy/1000}—Å)`);
      
      const location = await this.requestLocationWithTimeout(
        { 
          accuracy: strategy.accuracy,
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è Android
          ...(Platform.OS === 'android' && {
            enableHighAccuracy: strategy.energyProfile !== 'low',
            timeout: timeoutForStrategy,
            maximumAge: strategy.energyProfile === 'low' ? 60000 : 30000
          })
        },
        timeoutForStrategy
      );

      const accuracyInfo = getAccuracyInfo(location.coords.accuracy || undefined);
      const timeSpent = Date.now() - startTime;

      const result: QualityLocationResult = {
        location,
        accuracyInfo,
        strategy: strategy.name as any,
        timeSpent,
        energyProfile: strategy.energyProfile,
        method: this.determineLocationMethod(strategy, accuracyInfo)
      };

      // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      this.cacheLocation(location, accuracyInfo, this.determineLocationSource(strategy));

      console.log(`‚úÖ ${strategy.description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ:`, {
        accuracy: `${accuracyInfo.accuracy.toFixed(0)}–º`,
        level: accuracyInfo.level,
        timeSpent: `${timeSpent/1000}—Å`,
        energy: strategy.energyProfile,
        method: result.method
      });

      return result;

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ${strategy.description}:`, (error as Error).message);
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫—ç—à –∫–∞–∫ fallback
      const staleCache = this.getStaleCache();
      if (staleCache) {
        console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫—ç—à –∫–∞–∫ fallback');
        return staleCache;
      }

      throw error;
    } finally {
      this.isLocating = false;
      this.abortController = null;
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º —É–ª—É—á—à–µ–Ω–∏–µ–º
   * –†–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–¥—Ö–æ–¥ Apple iOS Core Location
   */
  async getQualityLocation(
    maxAccuracyNeeded: number = 50,
    maxTimeAllowed: number = 30000
  ): Promise<QualityLocationResult> {
    console.log(`üéØ –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (–¥–æ ${maxAccuracyNeeded}–º –∑–∞ ${maxTimeAllowed/1000}—Å)`);

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    const cachedLocation = this.getCachedLocation(maxAccuracyNeeded);
    if (cachedLocation) {
      return cachedLocation;
    }

    // –ü—Ä–æ–±—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    const lastKnown = await this.getLastKnownLocation();
    if (lastKnown && this.isLocationAcceptable(lastKnown, maxAccuracyNeeded)) {
      console.log('üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ');
      const result = this.createResult(lastKnown, 'cached', 0);
      this.cacheLocation(lastKnown.location, lastKnown.accuracyInfo, 'passive');
      return result;
    }

    // –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
    return this.executeProgressiveLocationFix(maxAccuracyNeeded, maxTimeAllowed);
  }

  /**
   * –ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
   */
  async getQuickLocation(): Promise<QualityLocationResult> {
    console.log('‚ö° –ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–µ–∂–∏–π –∫—ç—à (–¥–æ 30 —Å–µ–∫—É–Ω–¥)
    if (this.locationCache && Date.now() - this.locationCache.timestamp < 30000) {
      console.log('‚ö° –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—á–µ–Ω—å —Å–≤–µ–∂–∏–π –∫—ç—à');
      return this.createResult(this.locationCache, 'cached', 0);
    }

    const startTime = Date.now();

    try {
      // –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—Ä–æ—Å —Å –Ω–∏–∑–∫–∏–º —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º
      const location = await this.requestLocationWithTimeout(
        { 
          accuracy: Location.Accuracy.Low,
          // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
          ...(Platform.OS === 'android' && {
            enableHighAccuracy: false,
            timeout: 6000,
            maximumAge: 120000 // –†–∞–∑—Ä–µ—à–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ 2 –º–∏–Ω—É—Ç
          })
        },
        6000
      );

      const accuracyInfo = getAccuracyInfo(location.coords.accuracy || undefined);
      const result = this.createResult({ location, accuracyInfo }, 'quick', Date.now() - startTime);
      
      this.cacheLocation(location, accuracyInfo, 'network');
      return result;

    } catch (error) {
      console.log('‚ö†Ô∏è –ë—ã—Å—Ç—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º –∫—ç—à...');
      
      const fallbackCache = this.getStaleCache();
      if (fallbackCache) {
        return fallbackCache;
      }

      throw error;
    }
  }

  /**
   * –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–∞
   */
  private async executeProgressiveLocationFix(
    maxAccuracy: number,
    maxTime: number
  ): Promise<QualityLocationResult> {
    const startTime = Date.now();
    
    for (const strategy of ADAPTIVE_STRATEGIES) {
      const timeLeft = maxTime - (Date.now() - startTime);
      
      if (timeLeft <= 0) {
        console.log('‚è∞ –í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ');
        break;
      }

      const timeoutForStrategy = Math.min(strategy.timeout, timeLeft);
      
      try {
        console.log(`üîÑ ${strategy.description} (${timeoutForStrategy/1000}—Å)...`);
        
        const location = await this.requestLocationWithTimeout(
          { accuracy: strategy.accuracy },
          timeoutForStrategy
        );

        const accuracyInfo = getAccuracyInfo(location.coords.accuracy || undefined);
        const result = this.createResult({ location, accuracyInfo }, strategy.name as any, Date.now() - startTime);
        
        console.log(`‚úÖ ${strategy.description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ${accuracyInfo.accuracy.toFixed(0)}–º`);

        // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.cacheLocation(location, accuracyInfo, this.determineLocationSource(strategy));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏
        if (accuracyInfo.accuracy <= maxAccuracy) {
          console.log(`üéØ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ç—Ä–µ–±—É–µ–º–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (${accuracyInfo.accuracy.toFixed(0)}–º <= ${maxAccuracy}–º)`);
          return result;
        }

        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∏ –µ—Å—Ç—å –≤—Ä–µ–º—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        if (strategy !== ADAPTIVE_STRATEGIES[ADAPTIVE_STRATEGIES.length - 1]) {
          console.log(`üìà –¢–æ—á–Ω–æ—Å—Ç—å ${accuracyInfo.accuracy.toFixed(0)}–º –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞, —É–ª—É—á—à–∞–µ–º...`);
          continue;
        }

        // –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —á—Ç–æ –µ—Å—Ç—å
        console.log(`üèÅ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${accuracyInfo.accuracy.toFixed(0)}–º`);
        return result;

      } catch (error) {
        console.log(`‚ö†Ô∏è ${strategy.description} –Ω–µ —É–¥–∞–ª–æ—Å—å:`, (error as Error).message);
        
        // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        if (strategy === ADAPTIVE_STRATEGIES[ADAPTIVE_STRATEGIES.length - 1]) {
          throw error;
        }
        
        continue;
      }
    }

    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∏ –æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º');
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  private async getLastKnownLocation(): Promise<{ location: Location.LocationObject, accuracyInfo: LocationAccuracyInfo } | null> {
    try {
      const lastKnown = await Location.getLastKnownPositionAsync({
        maxAge: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
        requiredAccuracy: 1000 // –¥–æ 1–∫–º
      });

      if (lastKnown) {
        const accuracyInfo = getAccuracyInfo(lastKnown.coords.accuracy || undefined);
        return { location: lastKnown, accuracyInfo };
      }

      return null;
    } catch (error) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ');
      return null;
    }
  }

  /**
   * –ó–∞–ø—Ä–æ—Å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏
   */
  private async requestLocationWithTimeout(
    options: Location.LocationOptions,
    timeoutMs: number
  ): Promise<Location.LocationObject> {
    if (this.abortController?.signal.aborted) {
      throw new Error('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
    }

    return new Promise((resolve, reject) => {
      const timer = setTimeout(() => {
        reject(new Error(`–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ (${timeoutMs/1000}—Å)`));
      }, timeoutMs);

      // –°–ª—É—à–∞–µ–º —Å–∏–≥–Ω–∞–ª –æ—Ç–º–µ–Ω—ã
      if (this.abortController) {
        this.abortController.signal.addEventListener('abort', () => {
          clearTimeout(timer);
          reject(new Error('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞'));
        });
      }

      // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
      const optimizedOptions = {
        ...options,
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        ...(Platform.OS === 'ios' && {
          // iOS —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          distanceInterval: options.accuracy === Location.Accuracy.Low ? 50 : 10
        })
      };

      Location.getCurrentPositionAsync(optimizedOptions)
        .then(location => {
          clearTimeout(timer);
          resolve(location);
        })
        .catch(error => {
          clearTimeout(timer);
          reject(error);
        });
    });
  }

  /**
   * –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  private cacheLocation(
    location: Location.LocationObject,
    accuracyInfo: LocationAccuracyInfo,
    source: 'gps' | 'network' | 'passive'
  ): void {
    this.locationCache = {
      location,
      accuracyInfo,
      timestamp: Date.now(),
      source
    };
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  private getCachedLocation(requiredAccuracy: number): QualityLocationResult | null {
    if (!this.locationCache) return null;

    const age = Date.now() - this.locationCache.timestamp;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–µ–∂–µ—Å—Ç—å –∫—ç—à–∞
    if (age > this.CACHE_DURATION) return null;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å
    if (this.locationCache.accuracyInfo.accuracy > requiredAccuracy) return null;

    return this.createResult(this.locationCache, 'cached', 0);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ –∫—ç—à–∞ –∫–∞–∫ fallback
   */
  private getStaleCache(): QualityLocationResult | null {
    if (!this.locationCache) return null;

    const age = Date.now() - this.locationCache.timestamp;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫—ç—à —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π
    if (age > this.STALE_CACHE_DURATION) return null;

    console.log(`‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫—ç—à (–≤–æ–∑—Ä–∞—Å—Ç: ${Math.round(age/1000)}—Å)`);
    return this.createResult(this.locationCache, 'cached', 0);
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   */
  private createResult(
    locationData: { location: Location.LocationObject, accuracyInfo: LocationAccuracyInfo },
    strategy: 'quick' | 'balanced' | 'precise' | 'cached',
    timeSpent: number
  ): QualityLocationResult {
    return {
      location: locationData.location,
      accuracyInfo: locationData.accuracyInfo,
      strategy,
      timeSpent,
      energyProfile: this.getEnergyProfileForStrategy(strategy),
      method: this.determineMethodFromAccuracy(locationData.accuracyInfo)
    };
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
   */
  private getEnergyProfileForStrategy(strategy: string): 'low' | 'medium' | 'high' {
    switch (strategy) {
      case 'quick':
      case 'cached':
        return 'low';
      case 'balanced':
        return 'medium';
      case 'precise':
        return 'high';
      default:
        return 'medium';
    }
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  private determineLocationMethod(strategy: LocationStrategy, accuracyInfo: LocationAccuracyInfo): 'gps' | 'hybrid' | 'cached' {
    if (accuracyInfo.accuracy <= 10) return 'gps';
    if (strategy.energyProfile === 'low') return 'cached';
    return 'hybrid';
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
   */
  private determineLocationSource(strategy: LocationStrategy): 'gps' | 'network' | 'passive' {
    switch (strategy.energyProfile) {
      case 'low': return 'network';
      case 'medium': return 'network';
      case 'high': return 'gps';
      default: return 'network';
    }
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –ø–æ —Ç–æ—á–Ω–æ—Å—Ç–∏
   */
  private determineMethodFromAccuracy(accuracyInfo: LocationAccuracyInfo): 'gps' | 'hybrid' | 'cached' {
    if (accuracyInfo.accuracy <= 5) return 'gps';
    if (accuracyInfo.accuracy <= 50) return 'hybrid';
    return 'cached';
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–µ–º–ª–µ–º–æ—Å—Ç–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏
   */
  private isLocationAcceptable(
    locationData: { location: Location.LocationObject, accuracyInfo: LocationAccuracyInfo },
    maxAccuracyNeeded: number
  ): boolean {
    return locationData.accuracyInfo.accuracy <= maxAccuracyNeeded;
  }

  /**
   * –û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
   */
  cancelCurrentOperation(): void {
    if (this.abortController) {
      console.log('üö´ –û—Ç–º–µ–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏');
      this.abortController.abort();
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
   */
  clearCache(): void {
    this.locationCache = null;
    console.log('üóëÔ∏è –ö—ç—à –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ—á–∏—â–µ–Ω');
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—ç—à–µ
   */
  getCacheInfo(): { hasCache: boolean; age?: number; accuracy?: number; source?: string } | null {
    if (!this.locationCache) {
      return { hasCache: false };
    }

    return {
      hasCache: true,
      age: Date.now() - this.locationCache.timestamp,
      accuracy: this.locationCache.accuracyInfo.accuracy,
      source: this.locationCache.source
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
   */
  isCurrentlyLocating(): boolean {
    return this.isLocating;
  }
}

/**
 * –£–º–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
 */
export const getSmartLocation = async (
  requiredAccuracy: number = 50,
  maxTime: number = 30000,
  energyPreference: 'efficiency' | 'accuracy' | 'balanced' = 'balanced'
): Promise<QualityLocationResult> => {
  const service = QualityLocationService.getInstance();
  return await service.getSmartLocation(requiredAccuracy, maxTime, energyPreference);
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º —É–ª—É—á—à–µ–Ω–∏–µ–º
 */
export const getQualityLocation = async (
  maxAccuracyNeeded: number = 50,
  maxTimeAllowed: number = 30000
): Promise<QualityLocationResult> => {
  const service = QualityLocationService.getInstance();
  return await service.getQualityLocation(maxAccuracyNeeded, maxTimeAllowed);
};

/**
 * –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
 */
export const getQuickLocation = async (): Promise<QualityLocationResult> => {
  const service = QualityLocationService.getInstance();
  return await service.getQuickLocation();
}; 