import React from 'react';
import { View, StyleSheet } from 'react-native';
import { Text } from 'react-native-paper';
import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';
import { LocationAccuracyInfo } from '../../utils/locationUtils';
import appTheme from '../../constants/theme';

interface AdditionalLocationInfo {
  strategy?: string;
  timeSpent?: number;
  energyProfile?: 'low' | 'medium' | 'high';
  method?: 'gps' | 'hybrid' | 'cached';
}

interface LocationAccuracyProps {
  accuracyInfo: LocationAccuracyInfo;
  showDetails?: boolean;
  additionalInfo?: AdditionalLocationInfo;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ—á–Ω–æ—Å—Ç–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
 */
const LocationAccuracy: React.FC<LocationAccuracyProps> = ({ 
  accuracyInfo, 
  showDetails = false,
  additionalInfo
}) => {
  const getIcon = () => {
    switch (accuracyInfo.level) {
      case 'excellent':
        return 'bullseye-arrow';
      case 'good':
        return 'target';
      case 'fair':
        return 'approximately-equal';
      case 'poor':
        return 'crosshairs-question';
      default:
        return 'help-circle';
    }
  };

  const getStatusText = () => {
    const baseText = `${accuracyInfo.description} (¬±${accuracyInfo.accuracy.toFixed(0)}–º)`;
    
    if (!showDetails) return baseText;
    
    switch (accuracyInfo.level) {
      case 'excellent':
        return `${baseText} ‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è`;
      case 'good':
        return `${baseText} ‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á`;
      case 'fair':
        return `${baseText} ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É—Ç–æ—á–Ω–∏—Ç—å –∞–¥—Ä–µ—Å`;
      case 'poor':
        return `${baseText} ‚Ä¢ –õ—É—á—à–µ –≤–≤–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å –≤—Ä—É—á–Ω—É—é`;
      default:
        return baseText;
    }
  };

  return (
    <View style={[styles.container, { borderColor: accuracyInfo.color }]}>
      <View style={styles.header}>
        <MaterialCommunityIcons 
          name={getIcon()} 
          size={20} 
          color={accuracyInfo.color} 
        />
        <Text style={[styles.title, { color: accuracyInfo.color }]}>
          GPS –¢–æ—á–Ω–æ—Å—Ç—å
        </Text>
      </View>
      
      <Text style={styles.status}>
        {getStatusText()}
      </Text>
      
      {showDetails && (
        <View style={styles.tips}>
          {additionalInfo && (
            <View style={styles.additionalInfo}>
              {additionalInfo.strategy && (
                <Text style={styles.infoItem}>
                  üìã {additionalInfo.strategy} —Å—Ç—Ä–∞—Ç–µ–≥–∏—è
                </Text>
              )}
              {additionalInfo.timeSpent !== undefined && (
                <Text style={styles.infoItem}>
                  ‚è±Ô∏è {(additionalInfo.timeSpent / 1000).toFixed(1)}—Å
                </Text>
              )}
              {additionalInfo.method && (
                <Text style={styles.infoItem}>
                  üõ∞Ô∏è {additionalInfo.method.toUpperCase()}
                </Text>
              )}
              {additionalInfo.energyProfile && (
                <Text style={styles.infoItem}>
                  üîã {additionalInfo.energyProfile} —ç–Ω–µ—Ä–≥–∏—è
                </Text>
              )}
            </View>
          )}
          
          {accuracyInfo.level === 'poor' && (
            <Text style={styles.tip}>
              üí° –î–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤—ã–π–¥–∏—Ç–µ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–µ –º–µ—Å—Ç–æ
            </Text>
          )}
          {accuracyInfo.level === 'fair' && (
            <Text style={styles.tip}>
              üí° –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∞
            </Text>
          )}
        </View>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    backgroundColor: appTheme.colors.surface,
    borderRadius: appTheme.borderRadius.medium,
    borderWidth: 1,
    padding: appTheme.spacing.m,
    marginVertical: appTheme.spacing.xs,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: appTheme.spacing.xs,
  },
  title: {
    fontSize: 14,
    fontWeight: '600',
    marginLeft: appTheme.spacing.xs,
  },
  status: {
    fontSize: 13,
    color: appTheme.colors.textSecondary,
    lineHeight: 18,
  },
  tips: {
    marginTop: appTheme.spacing.xs,
    paddingTop: appTheme.spacing.xs,
    borderTopWidth: 1,
    borderTopColor: appTheme.colors.border,
  },
  tip: {
    fontSize: 12,
    color: appTheme.colors.textSecondary,
    fontStyle: 'italic',
  },
  additionalInfo: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: appTheme.spacing.xs,
    marginBottom: appTheme.spacing.xs,
  },
  infoItem: {
    fontSize: 11,
    color: appTheme.colors.textSecondary,
    backgroundColor: appTheme.colors.background,
    paddingHorizontal: appTheme.spacing.xs,
    paddingVertical: 2,
    borderRadius: 4,
    overflow: 'hidden',
  },
});

export default LocationAccuracy; 