import { supabase } from '../lib/supabase';
import AsyncStorage from '@react-native-async-storage/async-storage';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
export interface RemoteNotificationConfig {
  id: string;
  type: string;
  enabled: boolean;
  title: string;
  description: string;
  icon: string;
  sound: boolean;
  vibration: boolean;
  template?: {
    title: string;
    body: string;
  };
  updated_at: string;
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞—Å—Å–æ–≤—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫
export interface RemoteAppSettings {
  mass_notifications_enabled: boolean;
  max_notifications_per_day: number;
  quiet_hours_start: string; // "22:00"
  quiet_hours_end: string;   // "08:00"
  maintenance_mode: boolean;
  maintenance_message: string;
  app_version_required: string;
  features_enabled: {
    push_notifications: boolean;
    location_services: boolean;
    payment_processing: boolean;
    chat_support: boolean;
  };
}

class RemoteConfigService {
  private configCache: Map<string, any> = new Map();
  private lastFetchTime: number = 0;
  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  async getNotificationConfig(): Promise<Record<string, RemoteNotificationConfig>> {
    try {
      const cacheKey = 'notification_config';
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
      if (this.isCacheValid(cacheKey)) {
        return this.configCache.get(cacheKey);
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ Supabase
      const { data, error } = await supabase
        .from('remote_notification_config')
        .select('*')
        .eq('active', true);

      if (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
        return this.getFallbackConfig();
      }

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      const config = data.reduce((acc, item) => {
        // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑ Supabase –∫ –æ–∂–∏–¥–∞–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
        acc[item.type] = {
          ...item,
          template: {
            title: item.title,
            body: item.description
          }
        };
        return acc;
      }, {} as Record<string, RemoteNotificationConfig>);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à –∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
      this.configCache.set(cacheKey, config);
      await AsyncStorage.setItem(`remote_${cacheKey}`, JSON.stringify(config));
      this.lastFetchTime = Date.now();

      console.log('‚úÖ –£–¥–∞–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', Object.keys(config));
      return config;

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
      return this.getFallbackConfig();
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async getAppSettings(): Promise<RemoteAppSettings> {
    try {
      const cacheKey = 'app_settings';
      
      if (this.isCacheValid(cacheKey)) {
        return this.configCache.get(cacheKey);
      }

      const { data, error } = await supabase
        .from('remote_app_settings')
        .select('*')
        .eq('active', true)
        .single();

      if (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        return this.getDefaultAppSettings();
      }

      this.configCache.set(cacheKey, data);
      await AsyncStorage.setItem(`remote_${cacheKey}`, JSON.stringify(data));
      this.lastFetchTime = Date.now();

      return data;

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
      return this.getDefaultAppSettings();
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤–∫–ª—é—á–µ–Ω –ª–∏ —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω–æ
   */
  async isNotificationTypeEnabled(type: string): Promise<boolean> {
    try {
      const config = await this.getNotificationConfig();
      return config[type]?.enabled ?? true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
      return true; // Fallback - –≤–∫–ª—é—á–µ–Ω–æ
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  async getEnabledNotificationTypes(): Promise<string[]> {
    try {
      const config = await this.getNotificationConfig();
      return Object.entries(config)
        .filter(([_, settings]) => settings.enabled)
        .map(([type, _]) => type);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤:', error);
      return []; // Fallback - –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
    }
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   */
  async forceRefresh(): Promise<void> {
    this.configCache.clear();
    this.lastFetchTime = 0;
    await this.getNotificationConfig();
    await this.getAppSettings();
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∫—ç—à–∞
   */
  private isCacheValid(key: string): boolean {
    return (
      this.configCache.has(key) && 
      (Date.now() - this.lastFetchTime) < this.CACHE_DURATION
    );
  }

  /**
   * Fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
   */
  private async getFallbackConfig(): Promise<Record<string, RemoteNotificationConfig>> {
    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
      const cached = await AsyncStorage.getItem('remote_notification_config');
      if (cached) {
        return JSON.parse(cached);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é - —Ç–æ–ª—å–∫–æ 4 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–∞
    return {
      WORKER_ASSIGNED: {
        id: '1',
        type: 'WORKER_ASSIGNED',
        enabled: true,
        title: '–ú–∞—Å—Ç–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω! üë®‚Äçüîß',
        description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–∞',
        icon: 'üë®‚Äçüîß',
        sound: true,
        vibration: true,
        template: {
          title: '–ú–∞—Å—Ç–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω! üë®‚Äçüîß',
          body: '–ù–∞ –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä {workerName}! –ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–µ–¥–µ—Ç {scheduledDate} –≤ {scheduledTime}. –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –∑–∞ —á–∞—Å –¥–æ –≤–∏–∑–∏—Ç–∞!'
        },
        updated_at: new Date().toISOString()
      },
      REMINDER_1H: {
        id: '2',
        type: 'REMINDER_1H',
        enabled: true,
        title: '–ú–∞—Å—Ç–µ—Ä —Å–∫–æ—Ä–æ –ø—Ä–∏–µ–¥–µ—Ç! ‚è∞',
        description: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ —á–∞—Å –¥–æ –≤–∏–∑–∏—Ç–∞',
        icon: '‚è∞',
        sound: true,
        vibration: true,
        template: {
          title: '–ú–∞—Å—Ç–µ—Ä —Å–∫–æ—Ä–æ –ø—Ä–∏–µ–¥–µ—Ç! ‚è∞',
          body: '–ß–µ—Ä–µ–∑ 1 —á–∞—Å –∫ –≤–∞–º –ø—Ä–∏–µ–¥–µ—Ç –ú–∞—Å—Ç–µ—Ä {workerName}! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –±—É–¥—å—Ç–µ –¥–æ–º–∞'
        },
        updated_at: new Date().toISOString()
      },
      RATING_REQUEST: {
        id: '3',
        type: 'RATING_REQUEST',
        enabled: true,
        title: '–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–∞—Å—Ç–µ—Ä–∞! ‚≠ê',
        description: '–ó–∞–ø—Ä–æ—Å –æ—Ü–µ–Ω–∫–∏ —Ä–∞–±–æ—Ç—ã',
        icon: '‚≠ê',
        sound: false,
        vibration: false,
        template: {
          title: '–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–∞—Å—Ç–µ—Ä–∞! ‚≠ê',
          body: '–ö–∞–∫ –ø—Ä–æ—à–µ–ª –≤–∏–∑–∏—Ç –º–∞—Å—Ç–µ—Ä–∞? –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤—ã –∏ –ø–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ!'
        },
        updated_at: new Date().toISOString()
      },
      RECEIPT_READY: {
        id: '4',
        type: 'RECEIPT_READY',
        enabled: true,
        title: '–ß–µ–∫ –≥–æ—Ç–æ–≤! üßæ',
        description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —á–µ–∫–∞',
        icon: 'üßæ',
        sound: false,
        vibration: false,
        template: {
          title: '–ß–µ–∫ –≥–æ—Ç–æ–≤! üßæ',
          body: '–ß–µ–∫ –Ω–∞ —É—Å–ª—É–≥—É –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≤–∞—à–µ–º –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ! –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!'
        },
        updated_at: new Date().toISOString()
      }
    };
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
   */
  private getDefaultAppSettings(): RemoteAppSettings {
    return {
      mass_notifications_enabled: true,
      max_notifications_per_day: 10,
      quiet_hours_start: "22:00",
      quiet_hours_end: "08:00",
      maintenance_mode: false,
      maintenance_message: "",
      app_version_required: "1.0.0",
      features_enabled: {
        push_notifications: true,
        location_services: true,
        payment_processing: true,
        chat_support: true
      }
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
   */
  async isMaintenanceMode(): Promise<{ enabled: boolean; message: string }> {
    try {
      const settings = await this.getAppSettings();
      return {
        enabled: settings.maintenance_mode,
        message: settings.maintenance_message || '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'
      };
    } catch (error) {
      return { enabled: false, message: '' };
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async checkAppVersion(currentVersion: string): Promise<{ updateRequired: boolean; requiredVersion: string }> {
    try {
      const settings = await this.getAppSettings();
      const required = settings.app_version_required;
      
      // –ü—Ä–æ—Å—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
      const updateRequired = this.compareVersions(currentVersion, required) < 0;
      
      return {
        updateRequired,
        requiredVersion: required
      };
    } catch (error) {
      return { updateRequired: false, requiredVersion: currentVersion };
    }
  }

  /**
   * –ü—Ä–æ—Å—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
   */
  private compareVersions(version1: string, version2: string): number {
    const v1parts = version1.split('.').map(Number);
    const v2parts = version2.split('.').map(Number);
    
    for (let i = 0; i < Math.max(v1parts.length, v2parts.length); i++) {
      const v1part = v1parts[i] || 0;
      const v2part = v2parts[i] || 0;
      
      if (v1part < v2part) return -1;
      if (v1part > v2part) return 1;
    }
    
    return 0;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const remoteConfigService = new RemoteConfigService(); 