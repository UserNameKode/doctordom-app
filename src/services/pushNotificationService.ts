import * as Notifications from 'expo-notifications';
import * as Device from 'expo-device';
import Constants from 'expo-constants';
import { Platform } from 'react-native';
import { supabase } from '../lib/supabase';
import { remoteConfigService } from './remoteConfigService';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: true,
    shouldShowBanner: true,
    shouldShowList: true,
  }),
});

export interface NotificationType {
  id: string;
  name: string;
  description: string;
  enabled: boolean;
  sound: boolean;
  vibration: boolean;
  template: {
    title: string;
    body: string;
  };
}

// –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –±—ã—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥ - —Ç–æ–ª—å–∫–æ 4 –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const NOTIFICATION_TYPES: Record<string, NotificationType> = {
  WORKER_ASSIGNED: {
    id: 'WORKER_ASSIGNED',
    name: '–ú–∞—Å—Ç–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω',
    description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–∞',
    enabled: true,
    sound: true,
    vibration: true,
    template: {
      title: '–ú–∞—Å—Ç–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω! üë®‚Äçüîß',
      body: '–ù–∞ –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä {workerName}! –ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–µ–¥–µ—Ç {scheduledDate} –≤ {scheduledTime}. –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –∑–∞ —á–∞—Å –¥–æ –≤–∏–∑–∏—Ç–∞!'
    }
  },

  REMINDER_1H: {
    id: 'REMINDER_1H',
    name: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ —á–∞—Å',
    description: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 1 —á–∞—Å –¥–æ –≤–∏–∑–∏—Ç–∞',
    enabled: true,
    sound: true,
    vibration: true,
    template: {
      title: '–ú–∞—Å—Ç–µ—Ä —Å–∫–æ—Ä–æ –ø—Ä–∏–µ–¥–µ—Ç! ‚è∞',
      body: '–ß–µ—Ä–µ–∑ 1 —á–∞—Å –∫ –≤–∞–º –ø—Ä–∏–µ–¥–µ—Ç –ú–∞—Å—Ç–µ—Ä {workerName}! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –±—É–¥—å—Ç–µ –¥–æ–º–∞'
    }
  },

  RATING_REQUEST: {
    id: 'RATING_REQUEST',
    name: '–ó–∞–ø—Ä–æ—Å –æ—Ü–µ–Ω–∫–∏',
    description: '–ü—Ä–æ—Å—å–±–∞ –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã',
    enabled: true,
    sound: false,
    vibration: false,
    template: {
      title: '–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–∞—Å—Ç–µ—Ä–∞! ‚≠ê',
      body: '–ö–∞–∫ –ø—Ä–æ—à–µ–ª –≤–∏–∑–∏—Ç –º–∞—Å—Ç–µ—Ä–∞? –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤—ã –∏ –ø–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ!'
    }
  },

  RECEIPT_READY: {
    id: 'RECEIPT_READY',
    name: '–ß–µ–∫ –≥–æ—Ç–æ–≤',
    description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —á–µ–∫–∞',
    enabled: true,
    sound: false,
    vibration: false,
    template: {
      title: '–ß–µ–∫ –≥–æ—Ç–æ–≤! üßæ',
      body: '–ß–µ–∫ –Ω–∞ —É—Å–ª—É–≥—É –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≤–∞—à–µ–º –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ! –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!'
    }
  }
};

class PushNotificationService {
  private pushToken: string | null = null;
  private userId: string | null = null;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
  async initialize(userId: string): Promise<boolean> {
    try {
      this.userId = userId;
      
      if (!Device.isDevice) {
        console.log('üì± Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö');
        return false;
      }

      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      const { status: existingStatus } = await Notifications.getPermissionsAsync();
      let finalStatus = existingStatus;

      if (existingStatus !== 'granted') {
        const { status } = await Notifications.requestPermissionsAsync();
        finalStatus = status;
      }

      if (finalStatus !== 'granted') {
        console.log('‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ');
        return false;
      }

      // –ü–æ–ª—É—á–∞–µ–º push —Ç–æ–∫–µ–Ω
      const projectId = Constants.expoConfig?.extra?.eas?.projectId || 'b5d7328e-3e0c-4b93-bb9c-252ef9c89d77';
      
      const tokenData = await Notifications.getExpoPushTokenAsync({
        projectId: projectId,
      });

      this.pushToken = tokenData.data;
      console.log('üì± Push —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', this.pushToken);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await this.savePushToken(userId, this.pushToken);

      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      this.setupNotificationListeners();

      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      return false;
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  setupNotificationListeners(): void {
    try {
      // –°–ª—É—à–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ
      Notifications.addNotificationReceivedListener(notification => {
        console.log('üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ:', notification);
      });

      // –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      Notifications.addNotificationResponseReceivedListener(response => {
        console.log('üëÜ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', response);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notificationData = response.notification.request.content.data;
        if (notificationData?.type) {
          console.log('üìã –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notificationData.type);
          // TODO: –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ —Ç–∏–ø—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        }
      });

      console.log('üëÇ –°–ª—É—à–∞—Ç–µ–ª–∏ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ push —Ç–æ–∫–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  private async savePushToken(userId: string, token: string): Promise<void> {
    try {
      const { error } = await supabase
        .from('push_tokens')
        .upsert({
          user_id: userId,
          token: token,
          platform: Platform.OS,
          device_id: Constants.deviceId || 'unknown',
          updated_at: new Date().toISOString()
        }, {
          onConflict: 'user_id,device_id'
        });

      if (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å push —Ç–æ–∫–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error.message);
        console.log('üì± Push —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      } else {
        console.log('‚úÖ Push —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ push —Ç–æ–∫–µ–Ω–∞:', error);
      console.log('üì± Push —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Edge Function
  async sendRealPushNotification(
    type: string, 
    data: Record<string, any> = {},
    targetType: 'single' | 'mass' | 'targeted' = 'single',
    options: {
      userIds?: string[];
      platform?: 'all' | 'ios' | 'android';
    } = {}
  ): Promise<boolean> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const config = await remoteConfigService.getNotificationConfig();
      const notificationConfig = config[type];

      if (!notificationConfig || !notificationConfig.enabled) {
        console.log(`‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ ${type} –æ—Ç–∫–ª—é—á–µ–Ω–æ`);
        return false;
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —à–∞–±–ª–æ–Ω —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ undefined
      const template = notificationConfig.template || NOTIFICATION_TYPES[type]?.template || { title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', body: '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ' };
      let { title, body } = template;
      
      // –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω–µ
      Object.keys(data).forEach(key => {
        const placeholder = `{${key}}`;
        title = title.replace(new RegExp(placeholder, 'g'), data[key]);
        body = body.replace(new RegExp(placeholder, 'g'), data[key]);
      });

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
      const requestData: any = {
        type: targetType,
        title,
        body,
        data: {
          type,
          ...data
        }
      };

      // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
      switch (targetType) {
        case 'single':
          if (!this.pushToken) {
            console.log('‚ùå Push —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è single –æ—Ç–ø—Ä–∞–≤–∫–∏');
            return false;
          }
          requestData.pushToken = this.pushToken;
          break;
        
        case 'targeted':
          if (!options.userIds || options.userIds.length === 0) {
            console.log('‚ùå User IDs –Ω–µ —É–∫–∞–∑–∞–Ω—ã –¥–ª—è targeted –æ—Ç–ø—Ä–∞–≤–∫–∏');
            return false;
          }
          requestData.userIds = options.userIds;
          break;
        
        case 'mass':
          requestData.platform = options.platform || 'all';
          break;
      }

      console.log('üì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç–æ—è—â–µ–µ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', { type, targetType, title });

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Edge Function
      const { data: result, error } = await supabase.functions.invoke('send-push-notification', {
        body: requestData
      });

      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        return false;
      }

      if (result?.success) {
        console.log('‚úÖ Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ:', result.stats);
        return true;
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ Edge Function:', result);
        return false;
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
      return false;
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (fallback)
  async sendLocalNotification(type: string, data: Record<string, any> = {}): Promise<boolean> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const config = await remoteConfigService.getNotificationConfig();
      const notificationConfig = config[type];

      if (!notificationConfig || !notificationConfig.enabled) {
        console.log(`‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ ${type} –æ—Ç–∫–ª—é—á–µ–Ω–æ`);
        return false;
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —à–∞–±–ª–æ–Ω —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ undefined
      const template = notificationConfig.template || NOTIFICATION_TYPES[type]?.template || { title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', body: '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ' };
      let { title, body } = template;
      
      // –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω–µ
      Object.keys(data).forEach(key => {
        const placeholder = `{${key}}`;
        title = title.replace(new RegExp(placeholder, 'g'), data[key]);
        body = body.replace(new RegExp(placeholder, 'g'), data[key]);
      });

      console.log('üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', { type, title });

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await Notifications.scheduleNotificationAsync({
        content: {
          title,
          body,
          sound: notificationConfig.sound ? 'default' : undefined,
          data: {
            type,
            ...data
          },
        },
        trigger: null, // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ
      });

      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
      return false;
    }
  }

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø—Ä–æ–±—É–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–µ push, –ø–æ—Ç–æ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ)
  async sendNotification(
    type: string, 
    data: Record<string, any> = {},
    preferReal: boolean = true
  ): Promise<boolean> {
    if (preferReal && this.pushToken) {
      // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–µ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      const realSuccess = await this.sendRealPushNotification(type, data);
      if (realSuccess) {
        return true;
      }
      console.log('‚ö†Ô∏è –ù–∞—Å—Ç–æ—è—â–µ–µ push –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ');
    }

    // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    return await this.sendLocalNotification(type, data);
  }

  // –ú–∞—Å—Å–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—Å—Ç–æ—è—â–∏—Ö push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  async sendMassNotification(
    type: string,
    data: Record<string, any> = {},
    platform: 'all' | 'ios' | 'android' = 'all'
  ): Promise<boolean> {
    return await this.sendRealPushNotification(type, data, 'mass', { platform });
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä—É–ø–ø–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  async sendTargetedNotification(
    type: string,
    userIds: string[],
    data: Record<string, any> = {}
  ): Promise<boolean> {
    return await this.sendRealPushNotification(type, data, 'targeted', { userIds });
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
  async getNotificationTypes(): Promise<Record<string, NotificationType>> {
    try {
      const remoteConfig = await remoteConfigService.getNotificationConfig();
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å —É–¥–∞–ª–µ–Ω–Ω–æ–π
      const mergedConfig: Record<string, NotificationType> = {};
      
      Object.keys(NOTIFICATION_TYPES).forEach(key => {
        const localType = NOTIFICATION_TYPES[key];
        const remoteType = remoteConfig[key];
        
        mergedConfig[key] = {
          ...localType,
          enabled: remoteType?.enabled ?? localType.enabled,
          sound: remoteType?.sound ?? localType.sound,
          vibration: remoteType?.vibration ?? localType.vibration,
          template: remoteType?.template ?? localType.template
        };
      });

      return mergedConfig;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      return NOTIFICATION_TYPES;
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ push —Ç–æ–∫–µ–Ω–∞ (–∞–ª–∏–∞—Å –¥–ª—è cleanup –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  async removePushToken(): Promise<void> {
    return await this.cleanup();
  }

  // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async cleanup(): Promise<void> {
    try {
      if (this.userId && this.pushToken) {
        // –£–¥–∞–ª—è–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        await supabase
          .from('push_tokens')
          .delete()
          .eq('user_id', this.userId)
          .eq('token', this.pushToken);
        
        console.log('üßπ Push —Ç–æ–∫–µ–Ω —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
      }
      
      this.pushToken = null;
      this.userId = null;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ push —Ç–æ–∫–µ–Ω–∞
  getPushToken(): string | null {
    return this.pushToken;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  isInitialized(): boolean {
    return this.pushToken !== null && this.userId !== null;
  }

  // –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ —á–∞—Å –¥–æ –≤–∏–∑–∏—Ç–∞
  async scheduleReminderNotification(
    orderId: string,
    workerName: string,
    scheduledDateTime: Date
  ): Promise<boolean> {
    try {
      // –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞ —á–∞—Å –¥–æ –≤–∏–∑–∏—Ç–∞
      const reminderTime = new Date(scheduledDateTime.getTime() - 60 * 60 * 1000); // -1 —á–∞—Å
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –±—É–¥—É—â–µ–º
      if (reminderTime <= new Date()) {
        console.log('‚ö†Ô∏è –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —É–∂–µ –ø—Ä–æ—à–ª–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ');
        return await this.sendNotification('REMINDER_1H', {
          workerName,
          orderId
        });
      }

      console.log(`‚è∞ –ü–ª–∞–Ω–∏—Ä—É–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ ${reminderTime.toLocaleString('ru-RU')}`);

      // –ü–ª–∞–Ω–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await Notifications.scheduleNotificationAsync({
        content: {
          title: '–ú–∞—Å—Ç–µ—Ä —Å–∫–æ—Ä–æ –ø—Ä–∏–µ–¥–µ—Ç! ‚è∞',
          body: `–ß–µ—Ä–µ–∑ 1 —á–∞—Å –∫ –≤–∞–º –ø—Ä–∏–µ–¥–µ—Ç –ú–∞—Å—Ç–µ—Ä ${workerName}! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –±—É–¥—å—Ç–µ –¥–æ–º–∞`,
          data: {
            type: 'REMINDER_1H',
            orderId,
            workerName
          },
        },
        trigger: { date: reminderTime } as any,
      });

      console.log('‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ');
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:', error);
      return false;
    }
  }
}

export const pushNotificationService = new PushNotificationService();

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —Ç–∏–ø–∞–º
export const NotificationTemplates = {
  orderConfirmed: (orderNumber: string) => ({
    title: '‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
    body: `–í–∞—à –∑–∞–∫–∞–∑ ‚Ññ${orderNumber} –ø—Ä–∏–Ω—è—Ç –≤ —Ä–∞–±–æ—Ç—É. –ú–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.`,
    data: { type: NOTIFICATION_TYPES.ORDER_CONFIRMED.id, orderNumber }
  }),

  workerAssigned: (orderNumber: string, workerName: string) => ({
    title: 'üë®‚Äçüîß –ú–∞—Å—Ç–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω',
    body: `–ö –≤–∞—à–µ–º—É –∑–∞–∫–∞–∑—É ‚Ññ${orderNumber} –Ω–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä ${workerName}`,
    data: { type: NOTIFICATION_TYPES.WORKER_ASSIGNED.id, orderNumber, workerName }
  }),

  workerArrived: (orderNumber: string) => ({
    title: 'üöó –ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–±—ã–ª',
    body: `–ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–±—ã–ª –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ ‚Ññ${orderNumber}`,
    data: { type: NOTIFICATION_TYPES.WORKER_ARRIVED.id, orderNumber }
  }),

  orderCompleted: (orderNumber: string) => ({
    title: 'üéâ –ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω',
    body: `–ó–∞–∫–∞–∑ ‚Ññ${orderNumber} —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–∞—Å—Ç–µ—Ä–∞.`,
    data: { type: NOTIFICATION_TYPES.ORDER_COMPLETED.id, orderNumber }
  }),

  paymentReceived: (amount: number) => ({
    title: 'üí≥ –û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞',
    body: `–û–ø–ª–∞—Ç–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ ${amount} ‚ÇΩ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞`,
    data: { type: NOTIFICATION_TYPES.PAYMENT_RECEIVED.id, amount }
  }),

  promotion: (title: string, description: string) => ({
    title: `üéÅ ${title}`,
    body: description,
    data: { type: NOTIFICATION_TYPES.PROMOTION.id }
  })
}; 